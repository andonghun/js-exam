{"numFailedTestSuites":4,"numFailedTests":12,"numPassedTestSuites":0,"numPassedTests":3,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":2,"numTodoTests":0,"numTotalTestSuites":4,"numTotalTests":15,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1736419321385,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Q1.2 타입별 변수 테스트","num (number 타입)"],"duration":3,"failureDetails":[{"matcherResult":{"actual":"undefined","expected":"number","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"number\"\nReceived: \"undefined\"","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"number\"\nReceived: \"undefined\"\n    at Object.toBe (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:14:26)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 num (number 타입) num은 number 타입이어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"num은 number 타입이어야 한다."},{"ancestorTitles":["Q1.2 타입별 변수 테스트","num (number 타입)"],"duration":1,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:18:36)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 num (number 타입) num은 유한한 수여야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"num은 유한한 수여야 한다."},{"ancestorTitles":["Q1.2 타입별 변수 테스트","str (string 타입)"],"duration":1,"failureDetails":[{"matcherResult":{"actual":"undefined","expected":"string","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"string\"\nReceived: \"undefined\"","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"string\"\nReceived: \"undefined\"\n    at Object.toBe (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:24:26)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 str (string 타입) str은 string 타입이어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"str은 string 타입이어야 한다."},{"ancestorTitles":["Q1.2 타입별 변수 테스트","str (string 타입)"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'length')\n    at Object.length (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:30:18)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 str (string 타입) str은 빈 문자열이 아닐 수도 있다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"str은 빈 문자열이 아닐 수도 있다."},{"ancestorTitles":["Q1.2 타입별 변수 테스트","bool (boolean 타입)"],"duration":1,"failureDetails":[{"matcherResult":{"actual":"undefined","expected":"boolean","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"boolean\"\nReceived: \"undefined\"","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"boolean\"\nReceived: \"undefined\"\n    at Object.toBe (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:36:27)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 bool (boolean 타입) bool은 boolean 타입이어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"bool은 boolean 타입이어야 한다."},{"ancestorTitles":["Q1.2 타입별 변수 테스트","bool (boolean 타입)"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected value: undefined\nReceived array: [true, false]","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected value: undefined\nReceived array: [true, false]\n    at Object.toContain (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:40:29)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 bool (boolean 타입) bool이 true이거나 false인지 확인","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"bool이 true이거나 false인지 확인"},{"ancestorTitles":["Q1.2 타입별 변수 테스트","arr (array 타입)"],"duration":0,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:46:34)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 arr (array 타입) arr은 array 타입이어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"arr은 array 타입이어야 한다."},{"ancestorTitles":["Q1.2 타입별 변수 테스트","arr (array 타입)"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'length')\n    at Object.length (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:50:18)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 arr (array 타입) arr의 length 확인(0 이상일 것)","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"arr의 length 확인(0 이상일 것)"},{"ancestorTitles":["Q1.2 타입별 변수 테스트","obj (object 타입)"],"duration":1,"failureDetails":[{"matcherResult":{"actual":"undefined","expected":"object","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"object\"\nReceived: \"undefined\"","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"object\"\nReceived: \"undefined\"\n    at Object.toBe (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:58:26)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 obj (object 타입) obj는 object 타입이어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"obj는 object 타입이어야 한다."},{"ancestorTitles":["Q1.2 타입별 변수 테스트","obj (object 타입)"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at Object.keys (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:64:21)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 obj (object 타입) obj가 어떤 프로퍼티를 가질 수도 있다(예시)","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"obj가 어떤 프로퍼티를 가질 수도 있다(예시)"},{"ancestorTitles":["Q1.2 타입별 변수 테스트","undef (undefined 타입)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Q1.2 타입별 변수 테스트 undef (undefined 타입) undef는 undefined 이어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"undef는 undefined 이어야 한다."},{"ancestorTitles":["Q1.2 타입별 변수 테스트","nul (null 값)"],"duration":0,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeNull()\n\nReceived: undefined","pass":false}}],"failureMessages":["Error: expect(received).toBeNull()\n\nReceived: undefined\n    at Object.toBeNull (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:76:19)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 nul (null 값) nul은 null 이어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"nul은 null 이어야 한다."}],"endTime":1736419321781,"message":"  ● Q1.2 타입별 변수 테스트 › num (number 타입) › num은 number 타입이어야 한다.\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"number\"\n    Received: \"undefined\"\n\n      12 |   describe(\"num (number 타입)\", () => {\n      13 |     test(\"num은 number 타입이어야 한다.\", () => {\n    > 14 |       expect(typeof num).toBe(\"number\");\n         |                          ^\n      15 |     });\n      16 |\n      17 |     test(\"num은 유한한 수여야 한다.\", () => {\n\n      at Object.toBe (__test__do_not_edit/part1/Q1.2.test.js:14:26)\n\n  ● Q1.2 타입별 변수 테스트 › num (number 타입) › num은 유한한 수여야 한다.\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      16 |\n      17 |     test(\"num은 유한한 수여야 한다.\", () => {\n    > 18 |       expect(Number.isFinite(num)).toBe(true);\n         |                                    ^\n      19 |     });\n      20 |   });\n      21 |\n\n      at Object.toBe (__test__do_not_edit/part1/Q1.2.test.js:18:36)\n\n  ● Q1.2 타입별 변수 테스트 › str (string 타입) › str은 string 타입이어야 한다.\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"string\"\n    Received: \"undefined\"\n\n      22 |   describe(\"str (string 타입)\", () => {\n      23 |     test(\"str은 string 타입이어야 한다.\", () => {\n    > 24 |       expect(typeof str).toBe(\"string\");\n         |                          ^\n      25 |     });\n      26 |\n      27 |     test(\"str은 빈 문자열이 아닐 수도 있다.\", () => {\n\n      at Object.toBe (__test__do_not_edit/part1/Q1.2.test.js:24:26)\n\n  ● Q1.2 타입별 변수 테스트 › str (string 타입) › str은 빈 문자열이 아닐 수도 있다.\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\n      28 |       // 반드시 빈 문자열이 아니어야 한다는 보장은 없으므로 예시로 작성\n      29 |       // 필요시 아래 expect를 원하는 방식으로 변경\n    > 30 |       expect(str.length).toBeGreaterThanOrEqual(0);\n         |                  ^\n      31 |     });\n      32 |   });\n      33 |\n\n      at Object.length (__test__do_not_edit/part1/Q1.2.test.js:30:18)\n\n  ● Q1.2 타입별 변수 테스트 › bool (boolean 타입) › bool은 boolean 타입이어야 한다.\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"boolean\"\n    Received: \"undefined\"\n\n      34 |   describe(\"bool (boolean 타입)\", () => {\n      35 |     test(\"bool은 boolean 타입이어야 한다.\", () => {\n    > 36 |       expect(typeof bool).toBe(\"boolean\");\n         |                           ^\n      37 |     });\n      38 |\n      39 |     test(\"bool이 true이거나 false인지 확인\", () => {\n\n      at Object.toBe (__test__do_not_edit/part1/Q1.2.test.js:36:27)\n\n  ● Q1.2 타입별 변수 테스트 › bool (boolean 타입) › bool이 true이거나 false인지 확인\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected value: undefined\n    Received array: [true, false]\n\n      38 |\n      39 |     test(\"bool이 true이거나 false인지 확인\", () => {\n    > 40 |       expect([true, false]).toContain(bool);\n         |                             ^\n      41 |     });\n      42 |   });\n      43 |\n\n      at Object.toContain (__test__do_not_edit/part1/Q1.2.test.js:40:29)\n\n  ● Q1.2 타입별 변수 테스트 › arr (array 타입) › arr은 array 타입이어야 한다.\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      44 |   describe(\"arr (array 타입)\", () => {\n      45 |     test(\"arr은 array 타입이어야 한다.\", () => {\n    > 46 |       expect(Array.isArray(arr)).toBe(true);\n         |                                  ^\n      47 |     });\n      48 |\n      49 |     test(\"arr의 length 확인(0 이상일 것)\", () => {\n\n      at Object.toBe (__test__do_not_edit/part1/Q1.2.test.js:46:34)\n\n  ● Q1.2 타입별 변수 테스트 › arr (array 타입) › arr의 length 확인(0 이상일 것)\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\n      48 |\n      49 |     test(\"arr의 length 확인(0 이상일 것)\", () => {\n    > 50 |       expect(arr.length).toBeGreaterThanOrEqual(0);\n         |                  ^\n      51 |     });\n      52 |   });\n      53 |\n\n      at Object.length (__test__do_not_edit/part1/Q1.2.test.js:50:18)\n\n  ● Q1.2 타입별 변수 테스트 › obj (object 타입) › obj는 object 타입이어야 한다.\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"object\"\n    Received: \"undefined\"\n\n      56 |       // null 또한 typeof시 object가 나오므로 null이 아닌지도 체크\n      57 |       expect(obj).not.toBeNull();\n    > 58 |       expect(typeof obj).toBe(\"object\");\n         |                          ^\n      59 |     });\n      60 |\n      61 |     test(\"obj가 어떤 프로퍼티를 가질 수도 있다(예시)\", () => {\n\n      at Object.toBe (__test__do_not_edit/part1/Q1.2.test.js:58:26)\n\n  ● Q1.2 타입별 변수 테스트 › obj (object 타입) › obj가 어떤 프로퍼티를 가질 수도 있다(예시)\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\n      62 |       // 상황에 맞춰 프로퍼티 검증 로직을 추가할 수 있음\n      63 |       // 여기에선 \"속성이 하나 이상 있을 수도 있다\"는 예시로 작성\n    > 64 |       expect(Object.keys(obj).length).toBeGreaterThanOrEqual(0);\n         |                     ^\n      65 |     });\n      66 |   });\n      67 |\n\n      at Object.keys (__test__do_not_edit/part1/Q1.2.test.js:64:21)\n\n  ● Q1.2 타입별 변수 테스트 › nul (null 값) › nul은 null 이어야 한다.\n\n    expect(received).toBeNull()\n\n    Received: undefined\n\n      74 |   describe(\"nul (null 값)\", () => {\n      75 |     test(\"nul은 null 이어야 한다.\", () => {\n    > 76 |       expect(nul).toBeNull();\n         |                   ^\n      77 |     });\n      78 |   });\n      79 | });\n\n      at Object.toBeNull (__test__do_not_edit/part1/Q1.2.test.js:76:19)\n","name":"/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js","startTime":1736419321417,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Q1.3: const 재할당"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toThrow(expected)\n\nExpected constructor: TypeError\n\nReceived function did not throw","pass":false}}],"failureMessages":["Error: expect(received).toThrow(expected)\n\nExpected constructor: TypeError\n\nReceived function did not throw\n    at Object.toThrow (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.3.test.js:5:35)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.3: const 재할당 const 변수를 재할당하려고 할 때 TypeError를 던져야 합니다","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"const 변수를 재할당하려고 할 때 TypeError를 던져야 합니다"},{"ancestorTitles":["Q1.3: const 재할당"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Q1.3: const 재할당 const 변수의 재할당을 허용하지 않아야 합니다","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"const 변수의 재할당을 허용하지 않아야 합니다"},{"ancestorTitles":["Q1.3: const 재할당"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Q1.3: const 재할당 비원시 타입이라도 직접 재할당하면 오류를 던져야 합니다","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"비원시 타입이라도 직접 재할당하면 오류를 던져야 합니다"}],"endTime":1736419321848,"message":"  ● Q1.3: const 재할당 › const 변수를 재할당하려고 할 때 TypeError를 던져야 합니다\n\n    expect(received).toThrow(expected)\n\n    Expected constructor: TypeError\n\n    Received function did not throw\n\n      3 | describe(\"Q1.3: const 재할당\", () => {\n      4 |   it(\"const 변수를 재할당하려고 할 때 TypeError를 던져야 합니다\", () => {\n    > 5 |     expect(() => reassignConst()).toThrow(TypeError);\n        |                                   ^\n      6 |   });\n      7 |\n      8 |   it(\"const 변수의 재할당을 허용하지 않아야 합니다\", () => {\n\n      at Object.toThrow (__test__do_not_edit/part1/Q1.3.test.js:5:35)\n","name":"/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.3.test.js","startTime":1736419321785,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1736419322056,"message":"  ● Test suite failed to run\n\n    Your test suite must contain at least one test.\n\n      at onResult (node_modules/@jest/core/build/TestScheduler.js:133:18)\n      at node_modules/@jest/core/build/TestScheduler.js:254:19\n      at node_modules/emittery/index.js:363:13\n          at Array.map (<anonymous>)\n      at Emittery.emit (node_modules/emittery/index.js:361:23)\n","name":"/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.4.test.js","startTime":1736419322056,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1736419322056,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    SyntaxError: /Users/donghun/Desktop/Side/nbc/js-exam/part1/01.변수/Q1.1.js: Missing initializer in const declaration. (12:7)\n\n      10 | var x;\n      11 | let y;\n    > 12 | const z;\n         |        ^\n      13 |\n      14 | // export 를 수정하지 마세요.\n      15 | export { x, y, z }\n\n      at constructor (node_modules/@babel/parser/src/parse-error.ts:95:45)\n      at Parser.toParseError [as raise] (node_modules/@babel/parser/src/tokenizer/index.ts:1496:19)\n      at Parser.raise [as parseVar] (node_modules/@babel/parser/src/parser/statement.ts:1568:16)\n      at Parser.parseVar [as parseVarStatement] (node_modules/@babel/parser/src/parser/statement.ts:1214:10)\n      at Parser.parseVarStatement [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:566:21)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:437:17)\n      at Parser.parseStatementLike [as parseModuleItem] (node_modules/@babel/parser/src/parser/statement.ts:374:17)\n      at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1406:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1380:10)\n      at Parser.parseBlockBody [as parseProgram] (node_modules/@babel/parser/src/parser/statement.ts:225:10)\n      at Parser.parseProgram [as parseTopLevel] (node_modules/@babel/parser/src/parser/statement.ts:203:25)\n      at Parser.parseTopLevel [as parse] (node_modules/@babel/parser/src/parser/index.ts:47:10)\n      at parse (node_modules/@babel/parser/src/index.ts:66:38)\n      at parser (node_modules/@babel/core/src/parser/index.ts:28:19)\n          at parser.next (<anonymous>)\n      at normalizeFile (node_modules/@babel/core/src/transformation/normalize-file.ts:50:24)\n          at normalizeFile.next (<anonymous>)\n      at run (node_modules/@babel/core/src/transformation/index.ts:40:36)\n          at run.next (<anonymous>)\n      at transform (node_modules/@babel/core/src/transform.ts:29:20)\n          at transform.next (<anonymous>)\n      at step (node_modules/gensync/index.js:261:32)\n      at node_modules/gensync/index.js:273:13\n      at async.call.result.err.err (node_modules/gensync/index.js:223:11)\n      at node_modules/gensync/index.js:189:28\n      at cb (node_modules/@babel/core/src/gensync-utils/async.ts:90:7)\n      at node_modules/gensync/index.js:113:33\n      at step (node_modules/gensync/index.js:287:14)\n      at node_modules/gensync/index.js:273:13\n      at async.call.result.err.err (node_modules/gensync/index.js:223:11)\n","name":"/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.1.test.js","startTime":1736419322056,"status":"failed","summary":""}],"wasInterrupted":false}
