{"numFailedTestSuites":3,"numFailedTests":12,"numPassedTestSuites":1,"numPassedTests":10,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":4,"numTotalTests":22,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1736441086669,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Q1.2 타입별 변수 테스트","num (number 타입)"],"duration":3,"failureDetails":[{"matcherResult":{"actual":"undefined","expected":"number","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"number\"\u001b[39m\nReceived: \u001b[31m\"undefined\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"number\"\u001b[39m\nReceived: \u001b[31m\"undefined\"\u001b[39m\n    at Object.toBe (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:14:26)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 num (number 타입) num은 number 타입이어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"num은 number 타입이어야 한다."},{"ancestorTitles":["Q1.2 타입별 변수 테스트","num (number 타입)"],"duration":0,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:18:36)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 num (number 타입) num은 유한한 수여야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"num은 유한한 수여야 한다."},{"ancestorTitles":["Q1.2 타입별 변수 테스트","str (string 타입)"],"duration":0,"failureDetails":[{"matcherResult":{"actual":"undefined","expected":"string","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"string\"\u001b[39m\nReceived: \u001b[31m\"undefined\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"string\"\u001b[39m\nReceived: \u001b[31m\"undefined\"\u001b[39m\n    at Object.toBe (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:24:26)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 str (string 타입) str은 string 타입이어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"str은 string 타입이어야 한다."},{"ancestorTitles":["Q1.2 타입별 변수 테스트","str (string 타입)"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'length')\n    at Object.length (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:30:18)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 str (string 타입) str은 빈 문자열이 아닐 수도 있다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"str은 빈 문자열이 아닐 수도 있다."},{"ancestorTitles":["Q1.2 타입별 변수 테스트","bool (boolean 타입)"],"duration":1,"failureDetails":[{"matcherResult":{"actual":"undefined","expected":"boolean","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"boolean\"\u001b[39m\nReceived: \u001b[31m\"undefined\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"boolean\"\u001b[39m\nReceived: \u001b[31m\"undefined\"\u001b[39m\n    at Object.toBe (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:36:27)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 bool (boolean 타입) bool은 boolean 타입이어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"bool은 boolean 타입이어야 한다."},{"ancestorTitles":["Q1.2 타입별 변수 테스트","bool (boolean 타입)"],"duration":1,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32mundefined\u001b[39m\nReceived array: \u001b[31m[true, false]\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32mundefined\u001b[39m\nReceived array: \u001b[31m[true, false]\u001b[39m\n    at Object.toContain (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:40:29)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 bool (boolean 타입) bool이 true이거나 false인지 확인","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"bool이 true이거나 false인지 확인"},{"ancestorTitles":["Q1.2 타입별 변수 테스트","arr (array 타입)"],"duration":0,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:46:34)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 arr (array 타입) arr은 array 타입이어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"arr은 array 타입이어야 한다."},{"ancestorTitles":["Q1.2 타입별 변수 테스트","arr (array 타입)"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'length')\n    at Object.length (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:50:18)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 arr (array 타입) arr의 length 확인(0 이상일 것)","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"arr의 length 확인(0 이상일 것)"},{"ancestorTitles":["Q1.2 타입별 변수 테스트","obj (object 타입)"],"duration":0,"failureDetails":[{"matcherResult":{"actual":"undefined","expected":"object","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"object\"\u001b[39m\nReceived: \u001b[31m\"undefined\"\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"object\"\u001b[39m\nReceived: \u001b[31m\"undefined\"\u001b[39m\n    at Object.toBe (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:58:26)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 obj (object 타입) obj는 object 타입이어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"obj는 object 타입이어야 한다."},{"ancestorTitles":["Q1.2 타입별 변수 테스트","obj (object 타입)"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: Cannot convert undefined or null to object\n    at Function.keys (<anonymous>)\n    at Object.keys (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:64:21)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 obj (object 타입) obj가 어떤 프로퍼티를 가질 수도 있다(예시)","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"obj가 어떤 프로퍼티를 가질 수도 있다(예시)"},{"ancestorTitles":["Q1.2 타입별 변수 테스트","undef (undefined 타입)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Q1.2 타입별 변수 테스트 undef (undefined 타입) undef는 undefined 이어야 한다.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"undef는 undefined 이어야 한다."},{"ancestorTitles":["Q1.2 타입별 변수 테스트","nul (null 값)"],"duration":0,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeNull\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeNull\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBeNull (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js:76:19)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.2 타입별 변수 테스트 nul (null 값) nul은 null 이어야 한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"nul은 null 이어야 한다."}],"endTime":1736441087069,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQ1.2 타입별 변수 테스트 › num (number 타입) › num은 number 타입이어야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"number\"\u001b[39m\n    Received: \u001b[31m\"undefined\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 12 |\u001b[39m   describe(\u001b[32m\"num (number 타입)\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m     test(\u001b[32m\"num은 number 타입이어야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 14 |\u001b[39m       expect(\u001b[36mtypeof\u001b[39m num)\u001b[33m.\u001b[39mtoBe(\u001b[32m\"number\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 15 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m     test(\u001b[32m\"num은 유한한 수여야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__do_not_edit/part1/Q1.2.test.js\u001b[39m\u001b[0m\u001b[2m:14:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQ1.2 타입별 변수 테스트 › num (number 타입) › num은 유한한 수여야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 16 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m     test(\u001b[32m\"num은 유한한 수여야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 18 |\u001b[39m       expect(\u001b[33mNumber\u001b[39m\u001b[33m.\u001b[39misFinite(num))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__do_not_edit/part1/Q1.2.test.js\u001b[39m\u001b[0m\u001b[2m:18:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQ1.2 타입별 변수 테스트 › str (string 타입) › str은 string 타입이어야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"string\"\u001b[39m\n    Received: \u001b[31m\"undefined\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 |\u001b[39m   describe(\u001b[32m\"str (string 타입)\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m     test(\u001b[32m\"str은 string 타입이어야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 24 |\u001b[39m       expect(\u001b[36mtypeof\u001b[39m str)\u001b[33m.\u001b[39mtoBe(\u001b[32m\"string\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m     test(\u001b[32m\"str은 빈 문자열이 아닐 수도 있다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__do_not_edit/part1/Q1.2.test.js\u001b[39m\u001b[0m\u001b[2m:24:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQ1.2 타입별 변수 테스트 › str (string 타입) › str은 빈 문자열이 아닐 수도 있다.\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 |\u001b[39m       \u001b[90m// 반드시 빈 문자열이 아니어야 한다는 보장은 없으므로 예시로 작성\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m       \u001b[90m// 필요시 아래 expect를 원하는 방식으로 변경\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 30 |\u001b[39m       expect(str\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThanOrEqual(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 31 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 33 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.length (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__do_not_edit/part1/Q1.2.test.js\u001b[39m\u001b[0m\u001b[2m:30:18)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQ1.2 타입별 변수 테스트 › bool (boolean 타입) › bool은 boolean 타입이어야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"boolean\"\u001b[39m\n    Received: \u001b[31m\"undefined\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 |\u001b[39m   describe(\u001b[32m\"bool (boolean 타입)\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 35 |\u001b[39m     test(\u001b[32m\"bool은 boolean 타입이어야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 36 |\u001b[39m       expect(\u001b[36mtypeof\u001b[39m bool)\u001b[33m.\u001b[39mtoBe(\u001b[32m\"boolean\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 37 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 38 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 39 |\u001b[39m     test(\u001b[32m\"bool이 true이거나 false인지 확인\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__do_not_edit/part1/Q1.2.test.js\u001b[39m\u001b[0m\u001b[2m:36:27)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQ1.2 타입별 변수 테스트 › bool (boolean 타입) › bool이 true이거나 false인지 확인\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected value: \u001b[32mundefined\u001b[39m\n    Received array: \u001b[31m[true, false]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 38 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 39 |\u001b[39m     test(\u001b[32m\"bool이 true이거나 false인지 확인\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 40 |\u001b[39m       expect([\u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfalse\u001b[39m])\u001b[33m.\u001b[39mtoContain(bool)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 41 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 42 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 43 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toContain (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__do_not_edit/part1/Q1.2.test.js\u001b[39m\u001b[0m\u001b[2m:40:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQ1.2 타입별 변수 테스트 › arr (array 타입) › arr은 array 타입이어야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 44 |\u001b[39m   describe(\u001b[32m\"arr (array 타입)\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 45 |\u001b[39m     test(\u001b[32m\"arr은 array 타입이어야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 46 |\u001b[39m       expect(\u001b[33mArray\u001b[39m\u001b[33m.\u001b[39misArray(arr))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 49 |\u001b[39m     test(\u001b[32m\"arr의 length 확인(0 이상일 것)\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__do_not_edit/part1/Q1.2.test.js\u001b[39m\u001b[0m\u001b[2m:46:34)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQ1.2 타입별 변수 테스트 › arr (array 타입) › arr의 length 확인(0 이상일 것)\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 48 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 49 |\u001b[39m     test(\u001b[32m\"arr의 length 확인(0 이상일 것)\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 50 |\u001b[39m       expect(arr\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThanOrEqual(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.length (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__do_not_edit/part1/Q1.2.test.js\u001b[39m\u001b[0m\u001b[2m:50:18)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQ1.2 타입별 변수 테스트 › obj (object 타입) › obj는 object 타입이어야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"object\"\u001b[39m\n    Received: \u001b[31m\"undefined\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 56 |\u001b[39m       \u001b[90m// null 또한 typeof시 object가 나오므로 null이 아닌지도 체크\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 57 |\u001b[39m       expect(obj)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoBeNull()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 58 |\u001b[39m       expect(\u001b[36mtypeof\u001b[39m obj)\u001b[33m.\u001b[39mtoBe(\u001b[32m\"object\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 59 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 60 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 61 |\u001b[39m     test(\u001b[32m\"obj가 어떤 프로퍼티를 가질 수도 있다(예시)\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__do_not_edit/part1/Q1.2.test.js\u001b[39m\u001b[0m\u001b[2m:58:26)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQ1.2 타입별 변수 테스트 › obj (object 타입) › obj가 어떤 프로퍼티를 가질 수도 있다(예시)\u001b[39m\u001b[22m\n\n    TypeError: Cannot convert undefined or null to object\n        at Function.keys (<anonymous>)\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 62 |\u001b[39m       \u001b[90m// 상황에 맞춰 프로퍼티 검증 로직을 추가할 수 있음\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 63 |\u001b[39m       \u001b[90m// 여기에선 \"속성이 하나 이상 있을 수도 있다\"는 예시로 작성\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 64 |\u001b[39m       expect(\u001b[33mObject\u001b[39m\u001b[33m.\u001b[39mkeys(obj)\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThanOrEqual(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 65 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 66 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 67 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.keys (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__do_not_edit/part1/Q1.2.test.js\u001b[39m\u001b[0m\u001b[2m:64:21)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQ1.2 타입별 변수 테스트 › nul (null 값) › nul은 null 이어야 한다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeNull\u001b[2m()\u001b[22m\n\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 74 |\u001b[39m   describe(\u001b[32m\"nul (null 값)\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 75 |\u001b[39m     test(\u001b[32m\"nul은 null 이어야 한다.\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 76 |\u001b[39m       expect(nul)\u001b[33m.\u001b[39mtoBeNull()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 77 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 78 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 79 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeNull (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__do_not_edit/part1/Q1.2.test.js\u001b[39m\u001b[0m\u001b[2m:76:19)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.2.test.js","startTime":1736441086706,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Q1.3: const 재할당"],"duration":1,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mTypeError\u001b[39m\n\nReceived function did not throw","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected constructor: \u001b[32mTypeError\u001b[39m\n\nReceived function did not throw\n    at Object.toThrow (/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.3.test.js:5:35)\n    at Promise.then.completed (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/donghun/Desktop/Side/nbc/js-exam/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Q1.3: const 재할당 const 변수를 재할당하려고 할 때 TypeError를 던져야 합니다","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"const 변수를 재할당하려고 할 때 TypeError를 던져야 합니다"},{"ancestorTitles":["Q1.3: const 재할당"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Q1.3: const 재할당 const 변수의 재할당을 허용하지 않아야 합니다","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"const 변수의 재할당을 허용하지 않아야 합니다"},{"ancestorTitles":["Q1.3: const 재할당"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Q1.3: const 재할당 비원시 타입이라도 직접 재할당하면 오류를 던져야 합니다","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"비원시 타입이라도 직접 재할당하면 오류를 던져야 합니다"}],"endTime":1736441087141,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mQ1.3: const 재할당 › const 변수를 재할당하려고 할 때 TypeError를 던져야 합니다\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected constructor: \u001b[32mTypeError\u001b[39m\n\n    Received function did not throw\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 3 |\u001b[39m describe(\u001b[32m\"Q1.3: const 재할당\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 4 |\u001b[39m   it(\u001b[32m\"const 변수를 재할당하려고 할 때 TypeError를 던져야 합니다\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 5 |\u001b[39m     expect(() \u001b[33m=>\u001b[39m reassignConst())\u001b[33m.\u001b[39mtoThrow(\u001b[33mTypeError\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 6 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 7 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 8 |\u001b[39m   it(\u001b[32m\"const 변수의 재할당을 허용하지 않아야 합니다\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toThrow (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__do_not_edit/part1/Q1.3.test.js\u001b[39m\u001b[0m\u001b[2m:5:35)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.3.test.js","startTime":1736441087074,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1736441087308,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Your test suite must contain at least one test.\n\n      \u001b[2mat onResult (\u001b[22mnode_modules/@jest/core/build/TestScheduler.js\u001b[2m:133:18)\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/@jest/core/build/TestScheduler.js\u001b[2m:254:19\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/emittery/index.js\u001b[2m:363:13\u001b[22m\n          at Array.map (<anonymous>)\n      \u001b[2mat Emittery.emit (\u001b[22mnode_modules/emittery/index.js\u001b[2m:361:23)\u001b[22m\n","name":"/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.4.test.js","startTime":1736441087308,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Q1.1: 변수 선언 테스트","변수 x 테스트 (var)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Q1.1: 변수 선언 테스트 변수 x 테스트 (var) x는 정의되어 있어야 한다","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"x는 정의되어 있어야 한다"},{"ancestorTitles":["Q1.1: 변수 선언 테스트","변수 x 테스트 (var)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Q1.1: 변수 선언 테스트 변수 x 테스트 (var) x는 number 타입이어야 한다","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"x는 number 타입이어야 한다"},{"ancestorTitles":["Q1.1: 변수 선언 테스트","변수 y 테스트 (let)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Q1.1: 변수 선언 테스트 변수 y 테스트 (let) y는 정의되어 있어야 한다","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"y는 정의되어 있어야 한다"},{"ancestorTitles":["Q1.1: 변수 선언 테스트","변수 y 테스트 (let)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Q1.1: 변수 선언 테스트 변수 y 테스트 (let) y는 string 타입이어야 한다","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"y는 string 타입이어야 한다"},{"ancestorTitles":["Q1.1: 변수 선언 테스트","변수 z 테스트 (const)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Q1.1: 변수 선언 테스트 변수 z 테스트 (const) z는 정의되어 있어야 한다","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"z는 정의되어 있어야 한다"},{"ancestorTitles":["Q1.1: 변수 선언 테스트","변수 z 테스트 (const)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Q1.1: 변수 선언 테스트 변수 z 테스트 (const) z는 boolean 타입이어야 한다","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"z는 boolean 타입이어야 한다"},{"ancestorTitles":["Q1.1: 변수 선언 테스트","변수 z 테스트 (const)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Q1.1: 변수 선언 테스트 변수 z 테스트 (const) z는 재할당이 불가능해야 한다","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"z는 재할당이 불가능해야 한다"}],"endTime":1736441087294,"message":"","name":"/Users/donghun/Desktop/Side/nbc/js-exam/__test__do_not_edit/part1/Q1.1.test.js","startTime":1736441087197,"status":"passed","summary":""}],"wasInterrupted":false}
